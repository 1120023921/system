<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.doublehh.system.dao.ResourceMapper" >
  <resultMap id="BaseResultMap" type="cn.doublehh.system.model.Resource" >
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="reid" property="reid" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="enabled" property="enabled" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="pid" property="pid" jdbcType="INTEGER" />
    <result column="value" property="value" jdbcType="VARCHAR" />
    <result column="leaf" property="leaf" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbg.generated
    -->
    id, reid, name, type, enabled, create_date, update_date, create_by, update_by, remark, 
    pid, value, leaf
  </sql>

  <resultMap extends="BaseResultMap" id="ResourceMap"
             type="cn.doublehh.system.model.Resource">
    <collection column="id" javaType="java.util.List" property="children"
                select="getResourcesByPid" />
  </resultMap>

  <select id="getResourcesByPidAndType" resultMap="BaseResultMap"
          parameterType="cn.doublehh.system.model.Resource">
    select
    *
    from t_s_resource
    <where>
      <if test="pid == null">
        pid is null
      </if>
      <if test="pid != null">
        pid =#{pid}
      </if>
      <if test="type!=null">
        and type=#{type}
      </if>
    </where>
  </select>

  <select id="getResourcesByRoleId" resultMap="BaseResultMap"
          parameterType="java.lang.Integer">
    select
    *
    from t_s_resource t1,t_s_role_resource t2 where t1.id=t2.resource_id and
    t2.role_id=#{roleId}
  </select>

  <select id="getResourcesByUserId" resultMap="BaseResultMap"
          parameterType="java.lang.Integer">
    select distinct
    t1.id as id,
    t1.reid as reid,
    t1.name as name,
    t1.type as type,
    t1.enabled as enabled,
    t1.pid as pid,
    t1.value as value,
    t1.leaf as leaf
    from t_s_user_role t3,t_s_resource t1,t_s_role_resource t2 where
    <if test="pid == null">
      pid is null
    </if>
    <if test="pid != null">
      pid =#{pid}
    </if>
    and t1.id=t2.resource_id
    and t3.role_id=t2.role_id
    and t3.user_id=#{userId}
    and type=#{type}
    order by id asc
  </select>
  <!-- 通过userid获取菜单资源 -->
</mapper>